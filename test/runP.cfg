process PROD  = 
	{
 


   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 98765
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 12345
      }
   }
      
   source = FlatRandomEGunSource
   {
      untracked int32 maxEvents = 20
      PSet PGunParameters =
      {
         vint32 PartID = {22}
         double MinEta = -3.
         double MaxEta =  3.
         double MinPhi = -3.14159265358979323846 # in radians
         double MaxPhi =  3.14159265358979323846
         double MinE   = 20.
         double MaxE   = 20.
      }
      untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
   }

   service = MessageLogger { 
          vstring destinations = { "messages.txt" } 
   }

   es_source magfield = XMLIdealGeometryESSource {
          FileInPath GeometryConfiguration ="Geometry/CMSCommonData/data/FieldConfiguration.xml"
	  string rootNodeName=""
   }
   es_module = VolumeBasedMagneticFieldESProducer {
 	           double findVolumeTolerance = 0.0
 	           untracked bool cacheLastVolume = true
	           untracked bool timerOn = false
	}

  #Geometry
  #
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"  

  es_module = TrackerGeometricDetESModule {}


  module o1 = PoolOutputModule { untracked string fileName = "simhitoutput.root" }
  module SimG4Object = OscarProducer
   {
      bool NonBeamEvent = false
      untracked int32 RunNumber = 1001
      untracked int32 G4EventManagerVerbosity = 0
      untracked int32 G4StackManagerVerbosity = 0
      untracked int32 G4TrackingManagerVerbosity = 0
      bool UseMagneticField = true
      bool OverrideUserStackingAction = true
      bool StoreRndmSeeds = false
      bool RestoreRndmSeeds = false
      string PhysicsTablesDirectory = "PhysicsTables"
      bool StorePhysicsTables = false
      bool RestorePhysicsTables = false
      #VPSet Watchers = { }
      PSet MagneticField =
      {
         double delta = 1.
      }
      PSet Physics =
      {
         # NOTE : if you want EM Physics only,
         #        please select "SimG4Core/Physics/DummyPhysics" for type
         #        and turn ON DummyEMPhysics
         #
         string type = "SimG4Core/Physics/QGSP"
         bool DummyEMPhysics = false
         bool CutsPerRegion = true
         double DefaultCutValue = 1000.  # cuts in cm, i.e. 10m
         untracked int32 Verbosity = 0   # 1 will print cuts as they get set fdrom DD
                                         # 2 will do as 1 + will dump Geant4 table of cuts
      }
      PSet Generator =
      {
         bool ApplyPtCuts = true
         bool ApplyEtaCuts = true
         bool ApplyPhiCuts = false
         double MinPhiCut = 0.   # in degrees,
         double MaxPhiCut = 360. # internally converted to radians, (-pi,pi) range accounted for
         double MinEtaCut = -5.5
         double MaxEtaCut = 5.5
         double MinPtCut = 40.
         double MaxPtCut = 999999.
         untracked int32 Verbosity = 0
      }
     PSet RunAction = { string StopFile = "StopRun" }
      PSet EventAction =
      {
         bool CollapsePrimaryVertices = false
         string StopFile = "StopRun"
         untracked bool debug = false
      }

      PSet TrackingAction =
      {
         untracked bool DetailedTiming = false
      }
      PSet UtilityActions =
      {
               string type = "SimG4Core/UtilityAction/TrackingVerboseAction"
               untracked bool  DEBUG = false
               untracked bool  CheckForHighEtPhotons = false
               untracked int32 EventMin = 0
               untracked int32 EventMax = 0
               untracked int32 EventStep = 1
               untracked int32 TrackMin = 0
               untracked int32 TrackMax = 0
               untracked int32 TrackStep = 1
               untracked int32 VerboseLevel = 0
      }

      PSet SteppingAction =
      {
         bool   KillBeamPipe = true
         double CriticalEnergyForVacuum = 2.0
         double CriticalDensity = 1.e-15
         untracked int32  Verbosity = 0
      }
      PSet TrackerSD =
      {
         bool    ZeroEnergyLoss = false
         bool    NeverAccumulate = false
         bool    PrintHits = false
         double  ElectronicSigmaInNanoSeconds = 12.06
         double  EnergyThresholdForPersistencyInGeV = 0.5
         double  EnergyThresholdForHistoryInGeV = 0.05
      }
      PSet MuonSD =
      {
         double  EnergyThresholdForPersistency = 1.0
         bool    AllMuonsPersistent = false
         bool    PrintHits = false
      }

     PSet CaloSD = {
         double EminTrack = 1.0
         untracked int32  CheckHits = 25
         untracked bool   UseMap = true
         #untracked int32  Verbosity = 1
         untracked int32 Verbosity = 0
         untracked bool   DetailedTiming = false
      }
      PSet ECalSD = {
         bool   UseBirkLaw = false
         double BirkC1 = 0.013
         double BirkC2 = 9.6e-6
         #int32  Verbosity = 11
         int32 Verbosity = 0
      }
      PSet HCalSD = {
         bool   UseBirkLaw = false
         double BirkC1 = 0.013
         double BirkC2 = 9.6e-6
         #int32  Verbosity = 111
         int32 Verbosity = 0
         bool   UseShowerLibrary = true
         bool   TestNumberingScheme = false
      }
      PSet CaloTrkProcessing = {
         #int32  Verbosity = 1
         int32 Verbosity = 0
         bool   TestBeam  = false
         double EminTrack = 0.01
      }
      PSet HFShower = {
         #int32  Verbosity = 11
         int32 Verbosity = 0
         double ProbMax   = 0.7268
         double CFibre    = 0.50
      }
      PSet HFShowerLibrary = {
         FileInPath FileName = "SimG4CMS/Calo/data/hfshowerlibrary_lhep.root"
         string TreeEMID  = "h3"
         string TreeHadID = "h8"
      }
      PSet HFCherenkov = {
         #int32  Verbosity       = 1
         int32 Verbosity = 0
         double RefIndex        = 1.459
         double Lambda1         = 280.0
         double Lambda2         = 700.0
         double Aperture        = 0.33
         double ApertureTrapped = 0.22
         double Gain            = 0.33
         bool   CheckSurvive    = false
      }
	
      VPSet Watchers = {
        {
          string type = "EcalSimHitsValidProducer"
          untracked string instanceLabel="EcalValidInfo"
          untracked bool verbose = false
        }
      }
     }

	path p1 = { SimG4Object }
	endpath outpath = { o1 }
	}		
