process EcalHitsValid  = 
	{
    untracked PSet maxEvents = {untracked int32 input = 2000}

    source = PoolSource {
         #
	 #  Note for Xingtao :
	 # this "/store/..." thing below shows how to read from 
	 # dCache the newly regenerated Photon30GeV_all sample;
	 #
	 # Remember : this only works if one runs in b-shell !!!
	 #
	 # the full path to the new photon sample is this :
	 # /pnfs/cms/WAX/11/store/unmerged/PreProd/2006/10/3/SVSuite100-EcalHits-Photon30GeVAll-GenEvents/GEN/0000/48E9CC58-2853-DB11-969D-003048767D3D.root
	 # you can also copy it overm using dccp, from dCache  
	 # to your work area and use locally
	 #
	 # untracked vstring fileNames = 
	 # {"/store/unmerged/PreProd/2006/10/3/SVSuite100-EcalHits-Photon30GeVAll-GenEvents/GEN/0000/48E9CC58-2853-DB11-969D-003048767D3D.root"}
	 #
         untracked vstring fileNames = {'file:Photon_E30GeV_all.root'}
    }
     

  # initialize  MessageLogger	
  include "FWCore/MessageLogger/data/MessageLogger.cfi"   

  # initialize magnetic field
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  # geometry (Only Ecal)
  include "Geometry/EcalCommonData/data/EcalOnly.cfi"

  es_module = TrackerGeometricDetESModule {}

  module o1 = PoolOutputModule { 
	untracked string fileName = "Photon_E30GeV_all_EcalValidation.root" 
  }
	
  # DQM services
  service = DaqMonitorROOTBackEnd{ }

  service = RandomNumberGeneratorService
   {
      PSet moduleSeeds = { 
         untracked uint32 g4SimHits = 9876
      }
   }

 
  service = Timing{ }

  service = SimpleMemoryCheck{ }

  include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"

  include "SimG4Core/Application/data/SimG4Object.cfi"
  replace  g4SimHits.Generator.HepMCProductLabel = "source"
  replace g4SimHits.Watchers = {
       { string type = "EcalSimHitsValidProducer"
         untracked string instanceLabel="EcalValidInfo"
         untracked bool verbose = false
       }
  }
	
  # ECAL hits validation sequence
  include "Validation/EcalHits/data/ecalSimHitsValidationSequence.cff"
	
  path p1 = { g4SimHits, ecalSimHitsValidationSequence }
  endpath outpath = { o1 }
}		
